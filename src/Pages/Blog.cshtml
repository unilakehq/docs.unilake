@page "/blog"
@inject MarkdownPages Markdown
@attribute [RenderStatic("/blog/index.html")]
@{
    ViewData["Title"] = "Unilake Blog";
}

<div class="mx-auto bg-white 3xl:container font-inter">
    @await Html.PartialAsync("Subscribe")

    <section class="w-full bg-backgroundFaded">
        <div
            class="flex flex-col mx-auto border-b max-w-screen-3xl py-XL md:py-XXL px-M 2xl:px-XXXL 3xl:px-60 gap-XL border-neutralSecondary blog-slider">
            <span
                class="text-brand md:px-L px-L text-[24px] tracking-[-0.72px]  xl:text-[40px] md:text-[32px] leading-[40px] xl:tracking-[-1.2px] md:tracking-[-0.96px] xl:leading-[44px] font-bold">Featured
                articles</span>
            @await Html.PartialAsync("BlogSlider")
        </div>
    </section>
    <section class="flex flex-col mx-auto py-XL xl:py-XXL px-XL md:px-XXL 2xl:px-XXXL 3xl:px-60 max-w-screen-3xl">
        <div class="flex flex-col gap-XL xl:gap-XXL">
            <div class="flex items-center justify-between">
                <span
                    class="xl:text-5xl text-[24px] tracking-[-0.72px] md:text-[40px] leading-[32px] md:leading-[48px] xl:leading-[52px] font-bold md:tracking-[-1.2px] xl:tracking-[-1.44px] text-brand">Articles</span>
            </div>
            <div class="grid grid-cols-1 md:gap-L gap-y-L md:gap-y-XL gap-L md:grid-cols-2 lg:grid-cols-3">
                @foreach (var item in Markdown.GetVisiblePages("blog").OrderByDescending(x => x.Date))
                {
                    <div
                        class="grid grid-cols-5 md:grid-cols-1 md:gap-L gap-M blog-card lg:border-r md:border-neutralSecondary">
                        @* img *@
                        <div class="flex-shrink-0 col-span-2 md:w-full">
                            <a href="/@item.Slug">
                                <img class="object-cover min-h-[137px] w-full h-full rounded-S" src="@item.Image" alt="">
                            </a>
                        </div>
                        @* content *@
                        <div class="flex flex-col col-span-3 md:gap-L sm:gap-M gap-XS">
                            <a href="/@item.Slug"><h1 class="md:text-H3 md:tracking-[-0.96px] text-Regular text-headLines blog-heading font-bold">@item.Title</h1></a>
                            <h5 class="md:text-Medium text-Small 2xl:w-[380px] 3xl:w-[400px]  md:leading-[28px] text-bodyText md:line-clamp-none line-clamp-2">@item.Summary</h5>
                            <a class="" href="/@item.Slug">
                                @await Html.PartialAsync("Logos/ReadArticleLogo")
                            </a>
                            <div class="md:flex hidden flex-grow gap-M h-[48px] max-w-[272px]">
                                <img src="@item.AuthorImage" class="h-[48px] w-[48px] rounded-full">
                                <div class="flex flex-col justify-between lg:min-w-[208px] min-w-[200px]">
                                    <span class="text-Bold text-headLines">@item.Author</span>
                                    <div class="flex items-end justify-between">
                                        <span class="text-Small text-textSecondary">@($"{item.Date:dd MMMM yyyy}")</span>
                                        <div class="flex items-center h-full">
                                            <svg width="4" height="5" viewBox="0 0 4 5" fill="none" xmlns="http://www.w3.org/2000/svg">
                                                <path d="M0.22168 3.06641V2.70605C0.22168 2.20215 0.379883 1.78613 0.696289 1.45801C1.01855 1.12988 1.45508 0.96582 2.00586 0.96582C2.5625 0.96582 3.00195 1.12988 3.32422 1.45801C3.64648 1.78613 3.80762 2.20215 3.80762 2.70605V3.06641C3.80762 3.56445 3.64648 3.97754 3.32422 4.30566C3.00781 4.62793 2.57129 4.78906 2.01465 4.78906C1.46387 4.78906 1.02734 4.62793 0.705078 4.30566C0.382812 3.97754 0.22168 3.56445 0.22168 3.06641Z" fill="#252532" />
                                            </svg>
                                        </div>
                                        <span class="text-Small text-textSecondary">@(Math.Max(item.WordCount / 238 ?? 0, 1)) min read</span>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>
    </section>
</div>
@await Html.PartialAsync("BlogFooter")
<script>
    function showMore(event){
        event.currentTarget.classList.toggle('show-more-focused')
        event.currentTarget.classList.toggle('show-more')
        event.currentTarget.children[1].classList.toggle('rotate-180')
    }
    function toggleTag(event) {
        const currentTag = event.currentTarget;
        if (currentTag.classList.contains('active-tag')) {
            currentTag.classList.remove('active-tag');
            currentTag.classList.add('inactive-tag');
        } else {
            currentTag.classList.remove('inactive-tag');
            currentTag.classList.add('active-tag');
        }
        console.log(event.currentTarget);
        console.log(event.target.classList);
    }
</script>