@page "/pages/{*pathInfo}"
@model docs.unilake.Page
@inject MarkdownPages Markdown

@implements IRenderStatic<docs.unilake.Page>
@functions {
    public List<Page> GetStaticProps(RenderContext ctx)
    {
        var markdown = ctx.Resolve<MarkdownPages>();
        var pages = markdown.GetVisiblePages();
        return pages
            .Where(x => !x.Path.StartsWith("_pages/blog"))
            .Map(page => new Page { PathInfo = page.Slug! });
    }
}

@{
    var docsPage = new Shared.DocsPage
    {
        Slug = Model.Slug,
        Folder = Model.Folder,
    }.Init(this, Markdown);
}

@section HeadArea
{
    <meta property="og:title" content="@docsPage.Doc?.Title | Unilake Docs">
    <meta property="og:description" content="@docsPage.Doc?.Summary">
    @* <meta property="og:url" content="@(new Uri($"{Request.Scheme}://{Request.Host}{Request.Path}").AbsoluteUri)"> *@
    <meta property="og:type" content="article">
    <meta property="og:image" content="@docsPage.Doc?.Image">
}

@await Html.PartialAsync("DocsPage", docsPage)
